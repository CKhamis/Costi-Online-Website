plugins {
	id 'application'
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.costi'
version = '11.2.0'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'jakarta.persistence:jakarta.persistence-api'
	implementation 'org.hibernate.orm:hibernate-community-dialects:6.4.4.Final'
	implementation 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.session:spring-session-jdbc:'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'com.squareup.okhttp3:okhttp:4.12.0'
	implementation 'org.json:json:20210307'
	implementation 'com.vladsch.flexmark:flexmark-all:0.64.8'
}

application{
	mainClass = 'com.costi.csw9.CostiOnlineStarter'
}

mainClassName = 'com.costi.csw9.CostiOnlineStarter'


tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(Tar){
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(Zip){
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jar {
	manifest {
		attributes(
				'Main-Class': 'com.costi.csw9.CostiOnlineStarter'
		)
	}
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

task DataReverseServerHost(type: Jar)
{
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	mainClassName = 'com.costi.csw9.CostiOnlineStarter'
	manifest
			{
				attributes 'Main-Class' : "com.costi.csw9.CostiOnlineStarter"
			}

	from sourceSets.main.output

	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}

	baseName = 'CostiOnlinejar'
}

task DataReverseServerHostStartScript(type: CreateStartScripts)
{
	outputDir = file('build/scripts/')
	mainClass = 'com.costi.csw9.CostiOnlineStarter'
	applicationName = 'CostiOnlineStart'
	classpath = files('libs/' + jar.getArchiveFileName().get())
//    classpath = files('libs/' + DataReverseServerHost.archiveFileName.get())
}

distributions
		{
			main
					{
						contents
								{
									duplicatesStrategy = DuplicatesStrategy.EXCLUDE
									from (DataReverseServerHost) {into 'lib'}
									from (DataReverseServerHostStartScript) {into 'bin'}
								}
					}
		}
